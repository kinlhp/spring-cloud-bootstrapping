version: "3.7"
networks:
  spring_cloud_bootstrapping_network:
    name: ${CONTAINER_NETWORK_NAME}
    driver: ${CONTAINER_NETWORK_DRIVER}
services:
  configuration:
    image: ${CONTAINER_IMAGE_REPOSITORY}/${CONTAINER_IMAGE_NAME_PREFIX}-${CONFIGURATION_CONTAINER_NAME}:${TAG}
    container_name: ${CONFIGURATION_CONTAINER_NAME}
    env_file:
      - .env
    build:
      context: ${CONTAINER_IMAGE_NAME_PREFIX}-project/${CONTAINER_IMAGE_NAME_PREFIX}-${CONFIGURATION_CONTAINER_NAME}/
      dockerfile: Dockerfile
      args:
        - port=${CONFIGURATION_CONTAINER_PORT}
        - tag=${TAG}
    restart: ${CONTAINER_RESTART_POLICY}
    ports:
      - "${CONFIGURATION_CONTAINER_PORT}:${CONFIGURATION_CONTAINER_PORT}"
    volumes:
      ## For git local repository
      #- ${HOME}/.docker/volumes/${CONTAINER_IMAGE_NAME_PREFIX}/${CONFIGURATION_CONTAINER_NAME}/${CONTAINER_IMAGE_NAME_PREFIX}-${CONFIGURATION_CONTAINER_NAME}-repository.git:/${CONTAINER_IMAGE_NAME_PREFIX}-${CONFIGURATION_CONTAINER_NAME}-repository.git
      - ${HOME}/.docker/volumes/${CONTAINER_IMAGE_NAME_PREFIX}/${CONFIGURATION_CONTAINER_NAME}/data:/data
      - ${HOME}/.docker/volumes/${CONTAINER_IMAGE_NAME_PREFIX}/${CONFIGURATION_CONTAINER_NAME}/tmp:/tmp
    networks:
      - ${CONTAINER_NETWORK_NAME}
  discovery:
    image: ${CONTAINER_IMAGE_REPOSITORY}/${CONTAINER_IMAGE_NAME_PREFIX}-${DISCOVERY_CONTAINER_NAME}:${TAG}
    container_name: ${DISCOVERY_CONTAINER_NAME}
    env_file:
      - .env
    build:
      context: ${CONTAINER_IMAGE_NAME_PREFIX}-project/${CONTAINER_IMAGE_NAME_PREFIX}-${DISCOVERY_CONTAINER_NAME}/
      dockerfile: Dockerfile
      args:
        - port=${DISCOVERY_CONTAINER_PORT}
        - tag=${TAG}
    restart: ${CONTAINER_RESTART_POLICY}
    depends_on:
      - ${CONFIGURATION_CONTAINER_NAME}
    ports:
      - "${DISCOVERY_CONTAINER_PORT}:${DISCOVERY_CONTAINER_PORT}"
    volumes:
      - ${HOME}/.docker/volumes/${CONTAINER_IMAGE_NAME_PREFIX}/${DISCOVERY_CONTAINER_NAME}/data:/data
      - ${HOME}/.docker/volumes/${CONTAINER_IMAGE_NAME_PREFIX}/${DISCOVERY_CONTAINER_NAME}/tmp:/tmp
    networks:
      - ${CONTAINER_NETWORK_NAME}
  gateway:
    image: ${CONTAINER_IMAGE_REPOSITORY}/${CONTAINER_IMAGE_NAME_PREFIX}-${GATEWAY_CONTAINER_NAME}:${TAG}
    container_name: ${GATEWAY_CONTAINER_NAME}
    env_file:
      - .env
    build:
      context: ${CONTAINER_IMAGE_NAME_PREFIX}-project/${CONTAINER_IMAGE_NAME_PREFIX}-${GATEWAY_CONTAINER_NAME}/
      dockerfile: Dockerfile
      args:
        - port=${GATEWAY_CONTAINER_PORT}
        - tag=${TAG}
    restart: ${CONTAINER_RESTART_POLICY}
    depends_on:
      - ${DISCOVERY_CONTAINER_NAME}
    ports:
      - "${GATEWAY_CONTAINER_PORT}:${GATEWAY_CONTAINER_PORT}"
    volumes:
      - ${HOME}/.docker/volumes/${CONTAINER_IMAGE_NAME_PREFIX}/${GATEWAY_CONTAINER_NAME}/data:/data
      - ${HOME}/.docker/volumes/${CONTAINER_IMAGE_NAME_PREFIX}/${GATEWAY_CONTAINER_NAME}/tmp:/tmp
    networks:
      - ${CONTAINER_NETWORK_NAME}
  provider:
    image: ${CONTAINER_IMAGE_REPOSITORY}/${CONTAINER_IMAGE_NAME_PREFIX}-${PROVIDER_CONTAINER_NAME}:${TAG}
    container_name: ${PROVIDER_CONTAINER_NAME}
    env_file:
      - .env
    build:
      context: ${CONTAINER_IMAGE_NAME_PREFIX}-project/${CONTAINER_IMAGE_NAME_PREFIX}-${PROVIDER_CONTAINER_NAME}/
      dockerfile: Dockerfile
      args:
        - port=${PROVIDER_CONTAINER_PORT}
        - tag=${TAG}
    restart: ${CONTAINER_RESTART_POLICY}
    depends_on:
      - ${GATEWAY_CONTAINER_NAME}
    ports:
      - "${PROVIDER_CONTAINER_PORT}:${PROVIDER_CONTAINER_PORT}"
    volumes:
      - ${HOME}/.docker/volumes/${CONTAINER_IMAGE_NAME_PREFIX}/${PROVIDER_CONTAINER_NAME}/data:/data
      - ${HOME}/.docker/volumes/${CONTAINER_IMAGE_NAME_PREFIX}/${PROVIDER_CONTAINER_NAME}/tmp:/tmp
    networks:
      - ${CONTAINER_NETWORK_NAME}
